import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

class Result {

    /*
     * Complete the 'isValid' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts STRING s as parameter.
     */

    public static String isValid(String s) {
        Map<Character, Integer> counts = new HashMap<>();
        for( char ch: s.toCharArray() ) {
            int count = counts.containsKey(ch) ? counts.get(ch) : 0;
            counts.put(ch, (count + 1));
        }
        ArrayList<Integer> values = new ArrayList<Integer>(counts.values());
        Collections.sort(values);
        Map<Integer, Integer> groups = new HashMap<>();
        for(int i = 0; i < values.size(); i++){
            Integer element = values.get(i);
            int count = groups.containsKey(element) ? groups.get(element)+1 : element;
            groups.put(element, count);
        }
        System.out.println(groups);
        if(groups.size() >= 2)
            return "NO";
        else
            return "YES";


    }
 
}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String s = bufferedReader.readLine();

        String result = Result.isValid(s);

        bufferedWriter.write(result);
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
